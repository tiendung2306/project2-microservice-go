version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: project-2
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservice-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d project-2" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrate:
    build:
      context: .
      dockerfile: docker/migrate.Dockerfile
    container_name: migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      APP_ENV: local
      BLUEPRINT_DB_HOST: postgres
      BLUEPRINT_DB_PORT: 5432
      BLUEPRINT_DB_DATABASE: project-2
      BLUEPRINT_DB_USERNAME: postgres
      BLUEPRINT_DB_PASSWORD: 123
      BLUEPRINT_DB_SCHEMA: public
    networks:
      - microservice-network

  auth-service:
    build:
      context: .
      dockerfile: docker/auth-service.Dockerfile
    container_name: auth-service
    depends_on:
      migrate:
        condition: service_completed_successfully
    environment:
      APP_ENV: local
      AUTH_SERVICE_PORT: 3001
      FRONTEND_URL: http://localhost:5173
      BLUEPRINT_DB_HOST: postgres
      BLUEPRINT_DB_PORT: 5432
      BLUEPRINT_DB_DATABASE: project-2
      BLUEPRINT_DB_USERNAME: postgres
      BLUEPRINT_DB_PASSWORD: 123
      BLUEPRINT_DB_SCHEMA: public
      SMTP_HOST: smtp.ethereal.email
      SMTP_PORT: 587
      SMTP_USER: delores.lueilwitz17@ethereal.email
      SMTP_PASS: xVH1YeaDnqt6c8tQP2
      SMTP_FROM: tiendung2306@gmail.com
    ports:
      - "3001:3001"
    networks:
      - microservice-network
    restart: unless-stopped

  user-service:
    build:
      context: .
      dockerfile: docker/user-service.Dockerfile
    container_name: user-service
    depends_on:
      migrate:
        condition: service_completed_successfully
    environment:
      APP_ENV: local
      USER_SERVICE_PORT: 3000
      FRONTEND_URL: http://localhost:5173
      BLUEPRINT_DB_HOST: postgres
      BLUEPRINT_DB_PORT: 5432
      BLUEPRINT_DB_DATABASE: project-2
      BLUEPRINT_DB_USERNAME: postgres
      BLUEPRINT_DB_PASSWORD: 123
      BLUEPRINT_DB_SCHEMA: public
    ports:
      - "3000:3000"
    networks:
      - microservice-network
    restart: unless-stopped

  task-service:
    build:
      context: .
      dockerfile: docker/task-service.Dockerfile
    container_name: task-service
    depends_on:
      migrate:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    environment:
      APP_ENV: local
      TASK_SERVICE_PORT: 3002
      FRONTEND_URL: http://localhost:5173
      BLUEPRINT_DB_HOST: postgres
      BLUEPRINT_DB_PORT: 5432
      BLUEPRINT_DB_DATABASE: project-2
      BLUEPRINT_DB_USERNAME: postgres
      BLUEPRINT_DB_PASSWORD: 123
      BLUEPRINT_DB_SCHEMA: public
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    ports:
      - "3002:3002"
    networks:
      - microservice-network
    restart: unless-stopped

  notification-service:
    build:
      context: .
      dockerfile: docker/notification-service.Dockerfile
    container_name: notification-service
    depends_on:
      migrate:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    environment:
      APP_ENV: local
      NOTIFICATION_SERVICE_PORT: 3003
      FRONTEND_URL: http://localhost:5173
      BLUEPRINT_DB_HOST: postgres
      BLUEPRINT_DB_PORT: 5432
      BLUEPRINT_DB_DATABASE: project-2
      BLUEPRINT_DB_USERNAME: postgres
      BLUEPRINT_DB_PASSWORD: 123
      BLUEPRINT_DB_SCHEMA: public
      SMTP_HOST: smtp.ethereal.email
      SMTP_PORT: 587
      SMTP_USER: aditya.wunsch@ethereal.email
      SMTP_PASS: vuMTSmwPuMWUXqKyST
      SMTP_FROM: tiendung2306@gmail.com
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    ports:
      - "3003:3003"
    networks:
      - microservice-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI port
    networks:
      - microservice-network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

networks:
  microservice-network:
    driver: bridge

volumes:
  postgres_data:
